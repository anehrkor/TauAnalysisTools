import FWCore.ParameterSet.Config as cms

process = cms.Process("writeGBRForests")

process.maxEvents = cms.untracked.PSet(            
    input = cms.untracked.int32(1) # CV: needs to be set to 1 so that GBRForestWriter::analyze method gets called exactly once         
)

process.source = cms.Source("EmptySource")

process.gbrForestWriter = cms.EDAnalyzer("GBRForestWriter",
    jobs = cms.VPSet(
        cms.PSet(
            categories = cms.VPSet(
                cms.PSet(
                    inputFileName = cms.string('/nfs/dust/cms/user/anayak/CMS/Ntuple_Spring15TauID/MVAIsoTraining/tauId_v2_15/trainfilesfinal_v1/weights/mvaIsolation3HitsDeltaR05opt4aLTDB_BDTG.weights.xml'),                                                           
                    inputFileType = cms.string("XML"),
                    inputVariables = cms.vstring(
                        'TMath::Log(TMath::Max(1., recTauPt))',
                        'TMath::Abs(recTauEta)',
                        'TMath::Log(TMath::Max(1.e-2, tauIsoDeltaR05PtThresholdsLoose3HitsChargedIsoPtSum))',
                        'TMath::Log(TMath::Max(1.e-2, tauIsoDeltaR05PtThresholdsLoose3HitsNeutralIsoPtSum))',
                        'TMath::Log(TMath::Max(1.e-2, tauIsoDeltaR05PtThresholdsLoose3HitsPUcorrPtSum))',
                        'TMath::Log(TMath::Max(1.e-2, tauIsoDeltaR05PtThresholdsLoose3HitsPhotonPtSumOutsideSignalCone))',
                        'recTauDecayMode',
                        'TMath::Min(30., recTauNphoton)',
                        'TMath::Min(0.5, recTauPtWeightedDetaStrip)',
                        'TMath::Min(0.5, recTauPtWeightedDphiStrip)',
                        'TMath::Min(0.5, recTauPtWeightedDrSignal)',
                        'TMath::Min(0.5, recTauPtWeightedDrIsolation)',
                        'TMath::Min(100., recTauLeadingTrackChi2)',
                        'TMath::Min(1., recTauEratio)',
                        'TMath::Sign(+1., recImpactParam)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParam))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSign))',
                        'TMath::Sign(+1., recImpactParam3D)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParam3D))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSign3D))',
                        'hasRecDecayVertex',
                        'TMath::Sqrt(recDecayDistMag)',
                        'TMath::Min(10., recDecayDistSign)'
                    ),
                    spectatorVariables = cms.vstring(
                        'TMath::Min(100., recDecayVertexChi2)',
                        ##'TMath::Sign(+1., recImpactParamZ)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParamZ))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSignZ))',
                        'TMath::Sign(+1., recImpactParamTk2)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParamTk2))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSignTk2))',
                        'TMath::Sign(+1., recImpactParam3DTk2)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParam3DTk2))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSign3DTk2))',
                        ##'TMath::Sign(+1., recImpactParamZTk2)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParamZTk2))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSignZTk2))',
                        'TMath::Sign(+1., recImpactParamTk3)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParamTk3))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSignTk3))',
                        'TMath::Sign(+1., recImpactParam3DTk3)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParam3DTk3))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSign3DTk3))',
                        ##'TMath::Sign(+1., recImpactParamZTk3)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParamZTk3))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSignZTk3))',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recDecayLengthTk1))))',
                        'TMath::Min(10., TMath::Abs(recDecayLengthSignTk1))',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recDecayLengthTk2))))',
                        'TMath::Min(10., TMath::Abs(recDecayLengthSignTk2))',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recDecayLengthTk3))))',
                        'TMath::Min(10., TMath::Abs(recDecayLengthSignTk3))',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recDecayDist2D))))',
                        'TMath::Min(10., TMath::Abs(recDecayDistSign2D))',
                        'TMath::Min(10., recChi2DiffEvtVertex)',
                        ##'recTauPt',
                        'leadPFChargedHadrCandPt',
                        'numOfflinePrimaryVertices',
                        'genVisTauPt',
                        'genTauPt'
                    ),
                    gbrForestName = cms.string("tauIdMVAIsoDBoldDMwLT")
                )
            ),                                       
            outputFileType = cms.string("GBRForest"),                                      
            outputFileName = cms.string("gbrDiscriminationByIsolationMVA1Run2_isoDBoldDMwLT.root")
        ),                                                 
        cms.PSet(
            categories = cms.VPSet(
                cms.PSet(
                    inputFileName = cms.string('/nfs/dust/cms/user/anayak/CMS/Ntuple_Spring15TauID/MVAIsoTraining/tauId_v2_15/trainfilesfinal_v1/weights/mvaIsolation3HitsDeltaR05opt4bLTDB_BDTG.weights.xml'),                                                           
                    inputFileType = cms.string("XML"),
                    inputVariables = cms.vstring(
                        'TMath::Log(TMath::Max(1., recTauPt))',
                        'TMath::Abs(recTauEta)',
                        'TMath::Log(TMath::Max(1.e-2, tauIsoDeltaR05PtThresholdsLoose3HitsChargedIsoPtSum))',
                        'TMath::Log(TMath::Max(1.e-2, tauIsoDeltaR05PtThresholdsLoose3HitsNeutralIsoPtSum))',
                        'TMath::Log(TMath::Max(1.e-2, tauIsoDeltaR05PtThresholdsLoose3HitsPUcorrPtSum))',
                        'TMath::Log(TMath::Max(1.e-2, tauIsoDeltaR05PtThresholdsLoose3HitsPhotonPtSumOutsideSignalCone))',
                        'recTauDecayMode',
                        'TMath::Min(30., recTauNphoton)',
                        'TMath::Min(0.5, recTauPtWeightedDetaStrip)',
                        'TMath::Min(0.5, recTauPtWeightedDphiStrip)',
                        'TMath::Min(0.5, recTauPtWeightedDrSignal)',
                        'TMath::Min(0.5, recTauPtWeightedDrIsolation)',
                        'TMath::Min(100., recTauLeadingTrackChi2)',
                        'TMath::Min(1., recTauEratio)',
                        'TMath::Sign(+1., recImpactParam)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParam))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSign))',
                        'TMath::Sign(+1., recImpactParam3D)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParam3D))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSign3D))',
                        'hasRecDecayVertex',
                        'TMath::Sqrt(recDecayDistMag)',
                        'TMath::Min(10., recDecayDistSign)'
                        ),
                    spectatorVariables = cms.vstring(
                        'TMath::Min(100., recDecayVertexChi2)',
                        ##'TMath::Sign(+1., recImpactParamZ)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParamZ))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSignZ))',
                        'TMath::Sign(+1., recImpactParamTk2)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParamTk2))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSignTk2))',
                        'TMath::Sign(+1., recImpactParam3DTk2)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParam3DTk2))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSign3DTk2))',
                        ##'TMath::Sign(+1., recImpactParamZTk2)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParamZTk2))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSignZTk2))',
                        'TMath::Sign(+1., recImpactParamTk3)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParamTk3))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSignTk3))',
                        'TMath::Sign(+1., recImpactParam3DTk3)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParam3DTk3))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSign3DTk3))',
                        ##'TMath::Sign(+1., recImpactParamZTk3)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParamZTk3))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSignZTk3))',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recDecayLengthTk1))))',
                        'TMath::Min(10., TMath::Abs(recDecayLengthSignTk1))',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recDecayLengthTk2))))',
                        'TMath::Min(10., TMath::Abs(recDecayLengthSignTk2))',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recDecayLengthTk3))))',
                        'TMath::Min(10., TMath::Abs(recDecayLengthSignTk3))',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recDecayDist2D))))',
                        'TMath::Min(10., TMath::Abs(recDecayDistSign2D))',
                        'TMath::Min(10., recChi2DiffEvtVertex)',
                        ##'recTauPt',
                        'leadPFChargedHadrCandPt',
                        'numOfflinePrimaryVertices',
                        'genVisTauPt',
                        'genTauPt'
                    ),
                    gbrForestName = cms.string("tauIdMVAIsoDBnewDMwLT")
                )
            ),
            outputFileType = cms.string("GBRForest"),                                      
            outputFileName = cms.string("gbrDiscriminationByIsolationMVA1Run2_isoDBnewDMwLT.root")
        ),
        cms.PSet(
            categories = cms.VPSet(
                cms.PSet(
                    inputFileName = cms.string('/nfs/dust/cms/user/anayak/CMS/Ntuple_Spring15TauID/MVAIsoTraining/tauId_v2_15/trainfilesfinal_v1/weights/mvaIsolation3HitsDeltaR05opt4aLTPuWeight_BDTG.weights.xml'),                                                           
                    inputFileType = cms.string("XML"),
                    inputVariables = cms.vstring(
                        'TMath::Log(TMath::Max(1., recTauPt))',
                        'TMath::Abs(recTauEta)',
                        'TMath::Log(TMath::Max(1.e-2, tauIsoDeltaR05PtThresholdsLoose3HitsChargedIsoPtSum))',
                        'TMath::Log(TMath::Max(1.e-2, tauIsoDeltaR05PtThresholdsLoose3HitsNeutralIsoPtSumWeight))',
                        'TMath::Log(TMath::Max(1.e-2, tauIsoDeltaR05PtThresholdsLoose3HitsFootprintCorrection))',
                        'TMath::Log(TMath::Max(1.e-2, tauIsoDeltaR05PtThresholdsLoose3HitsPhotonPtSumOutsideSignalCone))',
                        'recTauDecayMode',
                        'TMath::Min(30., recTauNphoton)',
                        'TMath::Min(0.5, recTauPtWeightedDetaStrip)',
                        'TMath::Min(0.5, recTauPtWeightedDphiStrip)',
                        'TMath::Min(0.5, recTauPtWeightedDrSignal)',
                        'TMath::Min(0.5, recTauPtWeightedDrIsolation)',
                        'TMath::Min(100., recTauLeadingTrackChi2)',
                        'TMath::Min(1., recTauEratio)',
                        'TMath::Sign(+1., recImpactParam)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParam))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSign))',
                        'TMath::Sign(+1., recImpactParam3D)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParam3D))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSign3D))',
                        'hasRecDecayVertex',
                        'TMath::Sqrt(recDecayDistMag)',
                        'TMath::Min(10., recDecayDistSign)'
                    ),
                    spectatorVariables = cms.vstring(
                        'TMath::Min(100., recDecayVertexChi2)',
                        ##'TMath::Sign(+1., recImpactParamZ)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParamZ))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSignZ))',
                        'TMath::Sign(+1., recImpactParamTk2)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParamTk2))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSignTk2))',
                        'TMath::Sign(+1., recImpactParam3DTk2)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParam3DTk2))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSign3DTk2))',
                        ##'TMath::Sign(+1., recImpactParamZTk2)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParamZTk2))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSignZTk2))',
                        'TMath::Sign(+1., recImpactParamTk3)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParamTk3))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSignTk3))',
                        'TMath::Sign(+1., recImpactParam3DTk3)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParam3DTk3))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSign3DTk3))',
                        ##'TMath::Sign(+1., recImpactParamZTk3)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParamZTk3))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSignZTk3))',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recDecayLengthTk1))))',
                        'TMath::Min(10., TMath::Abs(recDecayLengthSignTk1))',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recDecayLengthTk2))))',
                        'TMath::Min(10., TMath::Abs(recDecayLengthSignTk2))',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recDecayLengthTk3))))',
                        'TMath::Min(10., TMath::Abs(recDecayLengthSignTk3))',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recDecayDist2D))))',
                        'TMath::Min(10., TMath::Abs(recDecayDistSign2D))',
                        'TMath::Min(10., recChi2DiffEvtVertex)',
                        ##'recTauPt',
                        'leadPFChargedHadrCandPt',
                        'numOfflinePrimaryVertices',
                        'genVisTauPt',
                        'genTauPt'
                    ),
                    gbrForestName = cms.string("tauIdMVAIsoPWoldDMwLT")
                )
            ),
            outputFileType = cms.string("GBRForest"),                                      
            outputFileName = cms.string("gbrDiscriminationByIsolationMVA1Run2_isoPWoldDMwLT.root")
        ),
        cms.PSet(
            categories = cms.VPSet(
                cms.PSet(                                     
                    inputFileName = cms.string('/nfs/dust/cms/user/anayak/CMS/Ntuple_Spring15TauID/MVAIsoTraining/tauId_v2_15/trainfilesfinal_v1/weights/mvaIsolation3HitsDeltaR05opt4bLTPuWeight_BDTG.weights.xml'),                                                           
                    inputFileType = cms.string("XML"),
                    inputVariables = cms.vstring(
                        'TMath::Log(TMath::Max(1., recTauPt))',
                        'TMath::Abs(recTauEta)',
                        'TMath::Log(TMath::Max(1.e-2, tauIsoDeltaR05PtThresholdsLoose3HitsChargedIsoPtSum))',
                        'TMath::Log(TMath::Max(1.e-2, tauIsoDeltaR05PtThresholdsLoose3HitsNeutralIsoPtSumWeight))',
                        'TMath::Log(TMath::Max(1.e-2, tauIsoDeltaR05PtThresholdsLoose3HitsFootprintCorrection))',
                        'TMath::Log(TMath::Max(1.e-2, tauIsoDeltaR05PtThresholdsLoose3HitsPhotonPtSumOutsideSignalCone))',
                        'recTauDecayMode',
                        'TMath::Min(30., recTauNphoton)',
                        'TMath::Min(0.5, recTauPtWeightedDetaStrip)',
                        'TMath::Min(0.5, recTauPtWeightedDphiStrip)',
                        'TMath::Min(0.5, recTauPtWeightedDrSignal)',
                        'TMath::Min(0.5, recTauPtWeightedDrIsolation)',
                        'TMath::Min(100., recTauLeadingTrackChi2)',
                        'TMath::Min(1., recTauEratio)',
                        'TMath::Sign(+1., recImpactParam)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParam))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSign))',
                        'TMath::Sign(+1., recImpactParam3D)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParam3D))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSign3D))',
                        'hasRecDecayVertex',
                        'TMath::Sqrt(recDecayDistMag)',
                        'TMath::Min(10., recDecayDistSign)'
                    ),
                    spectatorVariables = cms.vstring(
                        'TMath::Min(100., recDecayVertexChi2)',
                        ##'TMath::Sign(+1., recImpactParamZ)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParamZ))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSignZ))',
                        'TMath::Sign(+1., recImpactParamTk2)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParamTk2))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSignTk2))',
                        'TMath::Sign(+1., recImpactParam3DTk2)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParam3DTk2))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSign3DTk2))',
                        ##'TMath::Sign(+1., recImpactParamZTk2)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParamZTk2))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSignZTk2))',
                        'TMath::Sign(+1., recImpactParamTk3)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParamTk3))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSignTk3))',
                        'TMath::Sign(+1., recImpactParam3DTk3)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParam3DTk3))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSign3DTk3))',
                        ##'TMath::Sign(+1., recImpactParamZTk3)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParamZTk3))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSignZTk3))',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recDecayLengthTk1))))',
                        'TMath::Min(10., TMath::Abs(recDecayLengthSignTk1))',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recDecayLengthTk2))))',
                        'TMath::Min(10., TMath::Abs(recDecayLengthSignTk2))',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recDecayLengthTk3))))',
                        'TMath::Min(10., TMath::Abs(recDecayLengthSignTk3))',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recDecayDist2D))))',
                        'TMath::Min(10., TMath::Abs(recDecayDistSign2D))',
                        'TMath::Min(10., recChi2DiffEvtVertex)',
                        ##'recTauPt',
                        'leadPFChargedHadrCandPt',
                        'numOfflinePrimaryVertices',
                        'genVisTauPt',
                        'genTauPt'
                    ),
                    gbrForestName = cms.string("tauIdMVAIsoPWnewDMwLT")
                )
            ),
            outputFileType = cms.string("GBRForest"),                                      
            outputFileName = cms.string("gbrDiscriminationByIsolationMVA1Run2_isoPWnewDMwLT.root")
        ),
        cms.PSet(
            categories = cms.VPSet(
                cms.PSet(
                    inputFileName = cms.string('/nfs/dust/cms/user/anayak/CMS/Ntuple_Spring15TauID/MVAIsoTraining/tauId_v2_15/trainfilesfinal_v1/weights/mvaIsolation3HitsDeltaR03opt4aLTDB_BDTG.weights.xml'),
                    inputFileType = cms.string("XML"),
                    inputVariables = cms.vstring(
                        'TMath::Log(TMath::Max(1., recTauPt))',
                        'TMath::Abs(recTauEta)',
                        'TMath::Log(TMath::Max(1.e-2, tauIsoDeltaR03PtThresholdsLoose3HitsChargedIsoPtSum))',
                        'TMath::Log(TMath::Max(1.e-2, tauIsoDeltaR03PtThresholdsLoose3HitsNeutralIsoPtSum))',
                        'TMath::Log(TMath::Max(1.e-2, tauIsoDeltaR05PtThresholdsLoose3HitsPUcorrPtSum))',
                        'TMath::Log(TMath::Max(1.e-2, tauIsoDeltaR03PtThresholdsLoose3HitsPhotonPtSumOutsideSignalCone))',
                        'recTauDecayMode',
                        'TMath::Min(30., recTauNphoton)',
                        'TMath::Min(0.5, recTauPtWeightedDetaStrip)',
                        'TMath::Min(0.5, recTauPtWeightedDphiStrip)',
                        'TMath::Min(0.5, recTauPtWeightedDrSignal)',
                        'TMath::Min(0.5, recTauPtWeightedDrIsolation)',
                        'TMath::Min(100., recTauLeadingTrackChi2)',
                        'TMath::Min(1., recTauEratio)',
                        'TMath::Sign(+1., recImpactParam)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParam))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSign))',
                        'TMath::Sign(+1., recImpactParam3D)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParam3D))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSign3D))',
                        'hasRecDecayVertex',
                        'TMath::Sqrt(recDecayDistMag)',
                        'TMath::Min(10., recDecayDistSign)'
                    ),
                    spectatorVariables = cms.vstring(
                        'TMath::Min(100., recDecayVertexChi2)',
                        ##'TMath::Sign(+1., recImpactParamZ)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParamZ))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSignZ))',
                        'TMath::Sign(+1., recImpactParamTk2)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParamTk2))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSignTk2))',
                        'TMath::Sign(+1., recImpactParam3DTk2)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParam3DTk2))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSign3DTk2))',
                        ##'TMath::Sign(+1., recImpactParamZTk2)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParamZTk2))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSignZTk2))',
                        'TMath::Sign(+1., recImpactParamTk3)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParamTk3))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSignTk3))',
                        'TMath::Sign(+1., recImpactParam3DTk3)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParam3DTk3))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSign3DTk3))',
                        ##'TMath::Sign(+1., recImpactParamZTk3)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParamZTk3))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSignZTk3))',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recDecayLengthTk1))))',
                        'TMath::Min(10., TMath::Abs(recDecayLengthSignTk1))',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recDecayLengthTk2))))',
                        'TMath::Min(10., TMath::Abs(recDecayLengthSignTk2))',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recDecayLengthTk3))))',
                        'TMath::Min(10., TMath::Abs(recDecayLengthSignTk3))',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recDecayDist2D))))',
                        'TMath::Min(10., TMath::Abs(recDecayDistSign2D))',
                        'TMath::Min(10., recChi2DiffEvtVertex)',
                        ##'recTauPt',
                        'leadPFChargedHadrCandPt',
                        'numOfflinePrimaryVertices',
                        'genVisTauPt',
                        'genTauPt'
                    ),
                    gbrForestName = cms.string("tauIdMVAIsoDBdeltaR03oldDMwLT")
                )
            ),
            outputFileType = cms.string("GBRForest"),
            outputFileName = cms.string("gbrDiscriminationByIsolationMVA1Run2_isoDBdeltaR03oldDMwLT.root")
        ),
        cms.PSet(
            categories = cms.VPSet(
                cms.PSet(
                    inputFileName = cms.string('/nfs/dust/cms/user/anayak/CMS/Ntuple_Spring15TauID/MVAIsoTraining/tauId_v2_15/trainfilesfinal_v1/weights/mvaIsolation3HitsDeltaR03opt4aLTPuWeight_BDTG.weights.xml'),
                    inputFileType = cms.string("XML"),
                    inputVariables = cms.vstring(
                        'TMath::Log(TMath::Max(1., recTauPt))',
                        'TMath::Abs(recTauEta)',
                        'TMath::Log(TMath::Max(1.e-2, tauIsoDeltaR03PtThresholdsLoose3HitsChargedIsoPtSum))',
                        'TMath::Log(TMath::Max(1.e-2, tauIsoDeltaR03PtThresholdsLoose3HitsNeutralIsoPtSumWeight))',
                        'TMath::Log(TMath::Max(1.e-2, tauIsoDeltaR05PtThresholdsLoose3HitsFootprintCorrection))',
                        'TMath::Log(TMath::Max(1.e-2, tauIsoDeltaR03PtThresholdsLoose3HitsPhotonPtSumOutsideSignalCone))',
                        'recTauDecayMode',
                        'TMath::Min(30., recTauNphoton)',
                        'TMath::Min(0.5, recTauPtWeightedDetaStrip)',
                        'TMath::Min(0.5, recTauPtWeightedDphiStrip)',
                        'TMath::Min(0.5, recTauPtWeightedDrSignal)',
                        'TMath::Min(0.5, recTauPtWeightedDrIsolation)',
                        'TMath::Min(100., recTauLeadingTrackChi2)',
                        'TMath::Min(1., recTauEratio)',
                        'TMath::Sign(+1., recImpactParam)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParam))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSign))',
                        'TMath::Sign(+1., recImpactParam3D)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParam3D))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSign3D))',
                        'hasRecDecayVertex',
                        'TMath::Sqrt(recDecayDistMag)',
                        'TMath::Min(10., recDecayDistSign)'
                    ),
                    spectatorVariables = cms.vstring(
                        'TMath::Min(100., recDecayVertexChi2)',
                        ##'TMath::Sign(+1., recImpactParamZ)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParamZ))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSignZ))',
                        'TMath::Sign(+1., recImpactParamTk2)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParamTk2))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSignTk2))',
                        'TMath::Sign(+1., recImpactParam3DTk2)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParam3DTk2))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSign3DTk2))',
                        ##'TMath::Sign(+1., recImpactParamZTk2)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParamZTk2))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSignZTk2))',
                        'TMath::Sign(+1., recImpactParamTk3)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParamTk3))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSignTk3))',
                        'TMath::Sign(+1., recImpactParam3DTk3)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParam3DTk3))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSign3DTk3))',
                        ##'TMath::Sign(+1., recImpactParamZTk3)',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recImpactParamZTk3))))',
                        'TMath::Min(10., TMath::Abs(recImpactParamSignZTk3))',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recDecayLengthTk1))))',
                        'TMath::Min(10., TMath::Abs(recDecayLengthSignTk1))',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recDecayLengthTk2))))',
                        'TMath::Min(10., TMath::Abs(recDecayLengthSignTk2))',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recDecayLengthTk3))))',
                        'TMath::Min(10., TMath::Abs(recDecayLengthSignTk3))',
                        'TMath::Sqrt(TMath::Abs(TMath::Min(1., TMath::Abs(recDecayDist2D))))',
                        'TMath::Min(10., TMath::Abs(recDecayDistSign2D))',
                        'TMath::Min(10., recChi2DiffEvtVertex)',
                        ##'recTauPt',
                        'leadPFChargedHadrCandPt',
                        'numOfflinePrimaryVertices',
                        'genVisTauPt',
                        'genTauPt'
                    ),
                    gbrForestName = cms.string("tauIdMVAIsoPWdeltaR03oldDMwLT")
                    )
            ),
            outputFileType = cms.string("GBRForest"),
            outputFileName = cms.string("gbrDiscriminationByIsolationMVA1Run2_isoPWdeltaR03oldDMwLT.root")
            )
    )                                         
)

process.p = cms.Path(process.gbrForestWriter)

#  LocalWords:  recTauEta
